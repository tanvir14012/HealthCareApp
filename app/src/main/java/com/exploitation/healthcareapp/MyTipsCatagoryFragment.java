package com.exploitation.healthcareapp;

import android.app.Activity;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.view.menu.MenuBuilder;
import android.support.v7.view.menu.MenuPopupHelper;
import android.support.v7.widget.AppCompatEditText;
import android.support.v7.widget.GridLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.text.InputFilter;
import android.text.InputType;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.PopupMenu;
import android.widget.TextView;
import android.widget.Toast;

import org.w3c.dom.Text;

import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.util.List;

/**
 * Created by TANVIR on 5/9/2018.
 */

public class MyTipsCatagoryFragment extends Fragment {
    private RecyclerView recyclerView;
    private List<MyTipCatagory> obj;
    private CatagoryAdapter catagoryAdapter;
    private String curText;

    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setHasOptionsMenu(true);
    }

    @Override
    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
        super.onCreateOptionsMenu(menu, inflater);
        inflater.inflate(R.menu.mytips_catagory_add, menu);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {

        switch (item.getItemId()) {
            case R.id.mytips_catagory_deleteall :
                return true;
            case R.id.mytips_catagory_plus :
                AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
                final EditText text = new AppCompatEditText(getContext());
                text.setFilters(new InputFilter[]{new InputFilter.LengthFilter(50)});
                builder.setTitle("Choose a name");
                builder.setView(text);
                builder.setPositiveButton("Ok", new DialogInterface.OnClickListener() {

                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        MyTipsCollection.addCatagory(getContext(), text.getText().toString());
                        catagoryAdapter.reloadItem();
                    }
                });
                builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                dialog.cancel();
                            }
                        });
                builder.show();
                return true;

            default: return super.onOptionsItemSelected(item);
        }
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        if(requestCode == MyTipsCatagoryHolder.ACTION_REQUEST_GALLERY && resultCode == Activity.RESULT_OK && data != null) {
            InputStream inputStream = null;
            try {
                 inputStream = getActivity().getContentResolver().openInputStream(data.getData());
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
            Bitmap image = BitmapFactory.decodeStream(inputStream);
            if(image != null) {
                Toast.makeText(getContext(), curText, Toast.LENGTH_SHORT).show();
                ByteArrayOutputStream bout = new ByteArrayOutputStream();
                image.compress(Bitmap.CompressFormat.PNG, 0, bout);
                MyTipsCollection.updateCatagoryImage(getContext(), bout.toByteArray(), curText);
                catagoryAdapter.reloadItem();
            }
            else {
                Toast.makeText(getContext(), "Image is null", Toast.LENGTH_SHORT).show();
            }
        }
        else {
            Toast.makeText(getContext(), "hell ", Toast.LENGTH_SHORT).show();
        }
    }

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        ((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.my_tips);
        View view = inflater.inflate(R.layout.mytips_catagory_recyclerview,container,false);
        recyclerView = (RecyclerView) view.findViewById(R.id.mytips_catagory_recyclerview);
        recyclerView.setLayoutManager(new GridLayoutManager(getActivity(),3));
        catagoryAdapter = new CatagoryAdapter(getContext());
        recyclerView.setAdapter(catagoryAdapter);
        return view;
    }
    private class MyTipsCatagoryHolder extends RecyclerView.ViewHolder {
        private TextView text, dot;
        private ImageView caption;
        AlertDialog.Builder dialog;
        private static final String INTENT_IMAGE_TABLE_NAME = "ToFindTableName";
        private static final int ACTION_REQUEST_GALLERY = 932;
        public MyTipsCatagoryHolder(LayoutInflater inflater, ViewGroup container) {
            super(inflater.inflate(R.layout.mytips_catagory_item, container, false));
            text = (TextView) itemView.findViewById(R.id.mytips_catagory_text);
            dot = (TextView) itemView.findViewById(R.id.mytips_catagory_dot);
            caption = (ImageView) itemView.findViewById(R.id.mytips_catagory_image);

            dot.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    Toast.makeText(getActivity(),"Dot", Toast.LENGTH_SHORT).show();
                    PopupMenu popupMenu = new PopupMenu(getActivity(), dot);
                    popupMenu.inflate(R.menu.mytips_catagory_item_menu);
                    popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {
                        @Override
                        public boolean onMenuItemClick(MenuItem item) {
                            dialog = new AlertDialog.Builder(getContext());
                            final EditText input;
                            switch(item.getItemId()) {
                                case R.id.mytips_catagory_menu_rename :
                                    dialog.setTitle("Rename this folder");
                                    input = new EditText(getContext());
                                    input.setInputType(InputType.TYPE_CLASS_TEXT);
                                    dialog.setView(input);
                                    dialog.setPositiveButton("Ok", new DialogInterface.OnClickListener() {
                                        @Override
                                        public void onClick(DialogInterface dialog, int which) {
                                            if( ! input.getText().toString().equals("")) {
                                                MyTipsCollection.updateCatagoryName(getContext(), input.getText().toString(), text.getText().toString());
                                                catagoryAdapter.reloadItem();
                                            }
                                            else {
                                                Toast.makeText(getContext(),"no luck!",Toast.LENGTH_SHORT).show();
                                            }
                                        }
                                    });
                                    dialog.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                                        @Override
                                        public void onClick(DialogInterface dialog, int which) {
                                            dialog.cancel();
                                        }
                                    });
                                    dialog.show();
                                    return true;
                                case R.id.mytips_catagory_menu_change_image:
                                    dialog.setTitle("Choose a caption :");
                                    dialog.setItems(new CharSequence[]{"Gallery"}, new DialogInterface.OnClickListener() {
                                        @Override
                                        public void onClick(DialogInterface dialog, int which) {
                                            Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
                                            intent.setType("image/*");
                                            Intent chooser = Intent.createChooser(intent, "Choose a picture");
                                            curText = text.getText().toString();
                                            startActivityForResult(intent, ACTION_REQUEST_GALLERY);
                                        }
                                    });
                                    dialog.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                                        @Override
                                        public void onClick(DialogInterface dialog, int which) {
                                            dialog.cancel();
                                        }
                                    });
                                    dialog.show();
                                    return true;
                                case R.id.mytips_catagory_menu_delete :
                                    dialog.setTitle("Delete this folder. Are you sure ?");
                                    dialog.setPositiveButton("Yes", new DialogInterface.OnClickListener() {
                                        @Override
                                        public void onClick(DialogInterface dialog, int which) {
                                            MyTipsCollection.deleteCatagory(getContext(), text.getText().toString());
                                            catagoryAdapter.removeItem(getAdapterPosition());

                                        }
                                    });
                                    dialog.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                                        @Override
                                        public void onClick(DialogInterface dialog, int which) {
                                            dialog.cancel();
                                        }
                                    });
                                    dialog.show();
                                    return true;
                                default: return false;
                            }
                        }
                    });
                    popupMenu.show();
                }
            });
            itemView.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    //Toast.makeText(getActivity(),"Entire", Toast.LENGTH_SHORT).show();
                    Intent intent = new Intent(getActivity(), MyTipsList.class);
                    intent.putExtra(MyTipsList.MYTIPS_CATAGORY_EXTRA, text.getText().toString());
                    startActivity(intent);
                }
            });
        }
        public void onBind(int pos) {
            text.setText(obj.get(pos).getName());
            caption.setImageBitmap(BitmapFactory.decodeByteArray(obj.get(pos).getImage(), 0, obj.get(pos).getImage().length));
        }

    }
    private class CatagoryAdapter extends RecyclerView.Adapter<MyTipsCatagoryHolder> {

        public CatagoryAdapter(Context context) {
            obj = MyTipsCollection.getCatagories(context);
        }
        @Override
        public MyTipsCatagoryHolder onCreateViewHolder(ViewGroup parent, int viewType) {
            return new MyTipsCatagoryHolder(getActivity().getLayoutInflater(), parent);
        }

        @Override
        public void onBindViewHolder(MyTipsCatagoryHolder holder, int position) {
            holder.onBind(position);
        }

        @Override
        public int getItemCount() {
            return obj.size();
        }

        private void removeItem(int pos) {
            obj.remove(pos);
            this.notifyItemRemoved(pos);
        }
        private void reloadItem() {
            obj = MyTipsCollection.getCatagories(getContext());
            this.notifyDataSetChanged();
        }
    }
}

