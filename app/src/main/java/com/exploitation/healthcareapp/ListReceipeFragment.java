package com.exploitation.healthcareapp;


import android.app.SearchManager;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v4.view.MenuItemCompat;
import android.support.v7.widget.DividerItemDecoration;
import android.support.v7.widget.GridLayoutManager;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.SearchView;
import android.support.v7.widget.StaggeredGridLayoutManager;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.futuremind.recyclerviewfastscroll.FastScroller;

import java.util.List;
import java.util.BitSet;
import java.util.StringTokenizer;


/**
 * A simple {@link Fragment} subclass.
 */
public class ListReceipeFragment extends Fragment {
    private RecyclerView mRecyclerView;
    private ReceipeAdapter mAdapter;
    private FastScroller fastScroller;
    private SearchView searchView;

    public ListReceipeFragment() {
        // Required empty public constructor
    }

    public static ListReceipeFragment newInstance() { //Auto created

        Bundle args = new Bundle();
        ListReceipeFragment fragment = new ListReceipeFragment();
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setHasOptionsMenu(true);
    }

    @Override
    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
        super.onCreateOptionsMenu(menu, inflater);
        inflater.inflate(R.menu.search_menu,menu);
        SearchManager searchManager = (SearchManager)
                getActivity().getSystemService(Context.SEARCH_SERVICE);
         searchView =
                (android.support.v7.widget.SearchView) menu.findItem(R.id.search).getActionView();
        searchView.setSearchableInfo(
                searchManager.getSearchableInfo(getActivity().getComponentName()));
        searchView.setSubmitButtonEnabled(true);

    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        if(item.getItemId() == R.id.search) {
            searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
                @Override
                public boolean onQueryTextSubmit(String query) {
                    //Toast.makeText(getContext(),searchView.getQuery(),Toast.LENGTH_SHORT).show();
                    BitSet bitSet = null, backup = null;
                    bitSet = new BitSet(100);
                    Trie ds = new Trie(getActivity().getIntent().getIntExtra(ListReceipeFragmentActivity.INTENT_KEY, 0), getContext());
                    ds.load();
                    StringBuilder sb = new StringBuilder(searchView.getQuery().toString().toLowerCase());
                    for(int i = 0; i<sb.length(); i++) {
                        if(!(sb.charAt(i) >= 'a' && sb.charAt(i) <= 'z' || sb.charAt(i) == ' ' )){
                            sb.deleteCharAt(i);
                            i--; // above line deletes an element, so size reduced & need to calibrate i.
                        }
                    }
                    //Log.d("wtf", sb.toString());
                    if(! sb.toString().equals("")) {
                        StringTokenizer st = new StringTokenizer(sb.toString(), " ");
                        while (st.hasMoreElements()) {
                            backup = ds.search(st.nextToken());
                            if (backup != null) {
                                bitSet.or(backup);
                            }
                        }
                    }
                    mAdapter.loadSelected(bitSet);
                    mAdapter.notifyDataSetChanged();
                    return true;
                }

                @Override
                public boolean onQueryTextChange(String newText) {
                    //Toast.makeText(getContext(),"changed",Toast.LENGTH_SHORT).show();
                    return true;
                }
            });
            MenuItemCompat.setOnActionExpandListener(item, new MenuItemCompat.OnActionExpandListener() {
                @Override
                public boolean onMenuItemActionExpand(MenuItem item) {
                    mAdapter.nullReceipes();
                    mAdapter.notifyDataSetChanged();
                    return true;
                }

                @Override
                public boolean onMenuItemActionCollapse(MenuItem item) {
                    mAdapter.loadAll();
                    mAdapter.notifyDataSetChanged();
                    return true;
                }
            });
            return true;
        }
        else {
            return super.onOptionsItemSelected(item);
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.list_receipe_fragment,container,false);
        mRecyclerView = (RecyclerView) view.findViewById(R.id.list_receipe_fragment_layout);
        fastScroller = (FastScroller) view.findViewById(R.id.fastscroll);

        mRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
        /** getActivity() in a Fragment returns the Activity the Fragment is currently associated with. Recyclerview
         requires a LayoutManager to work **/
        mRecyclerView.addItemDecoration(new DividerItemDecoration(mRecyclerView.getContext(),DividerItemDecoration.VERTICAL));

        mAdapter = new ReceipeAdapter(getActivity());
        mRecyclerView.setAdapter(mAdapter);
        fastScroller.setRecyclerView(mRecyclerView);
        return  view;
    }
    private class ReceipeHolder extends RecyclerView.ViewHolder {
        private ImageView imageView;
        private TextView textView;
        private Receipe mReceipe;
        public ReceipeHolder( LayoutInflater inflater, ViewGroup container) {
            super(inflater.inflate(R.layout.list_receipe_item, container,false)); /** this
             way layout of list_receipt_item  is added to work with Recyclerview**/

            imageView =(ImageView) itemView.findViewById(R.id.imageView3); /* As the layout is inflated
            in super class, itemView(super class's View element) is used  */
            textView = (TextView) itemView.findViewById(R.id.textView3);

            itemView.setOnClickListener(new View.OnClickListener(){
                @Override
                public void onClick(View v) {
                    Intent intent = new Intent(getActivity(), SingleReceipeActivity.class);
                    intent.putExtra("receipeId", mReceipe.getId()); /** The extra is put on SingleReceipeActivity activity
                     and can be retrived from there **/
                    intent.putExtra("catagoryId",getActivity().getIntent().getIntExtra(ListReceipeFragmentActivity.INTENT_KEY,0));
                    startActivity(intent);
                }
            });

        }

        public void onBind(Receipe receipe) { /* User defined, modifies values of list_receipt_item
            when it's called from onBindViewHolder(..) of Adapter */
            imageView.setImageResource(getActivity().getResources().getIdentifier(receipe.getCaption(),"drawable",getActivity().getPackageName()));
            textView.setText(String.valueOf(receipe.getId()+1)+". " + getString(getActivity().getResources().getIdentifier(receipe.getName(),"string",getActivity().getPackageName())));
            mReceipe = receipe ; /**  Here we got the receipe obj associated with respective View, useful when a view is clicked */
        }
    }

    private class ReceipeAdapter extends RecyclerView.Adapter<ReceipeHolder> {
        private List<Receipe> receipeS;

        public ReceipeAdapter(Context context) {
            //receipeS = ReceipeList.getLoadedReceipes(context);
            loadAll();
        }

        @Override
        public ReceipeHolder onCreateViewHolder(ViewGroup parent, int viewType) {
            return new ReceipeHolder(LayoutInflater.from(getActivity()), parent);
        }

        @Override
        public void onBindViewHolder(ReceipeHolder holder, int position) {
            holder.onBind(receipeS.get(position));
        }

        @Override
        public int getItemCount() {
            return receipeS.size();
        }

        public void loadAll() {
            receipeS = ListTipsCatagory.getLoadedReceipes(getActivity().getIntent().getIntExtra(ListReceipeFragmentActivity.INTENT_KEY,0));
        }
        public void nullReceipes() {
            receipeS.clear();
        }

        public void loadSelected(BitSet bitSet) {
            receipeS = ListTipsCatagory.getSelectedReceipes( getActivity().getIntent().getIntExtra(ListReceipeFragmentActivity.INTENT_KEY,0), bitSet);
        }
    }

}
